{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\OneDrive\\\\Desktop\\\\INTEL\\\\intel\\\\frontend\\\\src\\\\components\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { fetchConversation, appendToConversation } from '../api/chatApi';\n// import './ChatWindow.css';\n\n// const ChatWindow = ({ chatId }) => {\n//   const [chat, setChat] = useState(null);\n//   const [prompt, setPrompt] = useState('');\n//   const [file, setFile] = useState(null);\n\n//   useEffect(() => {\n//     const loadChat = async () => {\n//       if (chatId) {\n//         const data = await fetchConversation(chatId);\n//         setChat(data);\n//       }\n//     };\n//     loadChat();\n//   }, [chatId]);\n\n//   const handleFileChange = (e) => {\n//     const selectedFile = e.target.files[0];\n//     setFile(selectedFile);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append('prompt', prompt);\n\n//     if (file) {\n//       formData.append('file', file);\n//     }\n\n//     const dummyResponse = 'This is a dummy response';\n\n//     const updatedChat = await appendToConversation(chatId, prompt, dummyResponse, formData);\n//     setPrompt('');\n//     setFile(null);\n\n//     setChat(updatedChat);\n//   };\n\n//   const firstPrompt = chat?.history && chat.history[0] ? chat.history[0].prompt : 'Untitled Chat';\n\n//   return (\n//     <div className=\"chat-window\">\n//       {chatId && <h3 className=\"chat-id\">Chat Title: {firstPrompt}</h3>}\n\n//       <ul>\n//         {chat?.history.map((entry, index) => (\n//           <li key={index}>\n//             <div className=\"prompt\">{entry.prompt}</div>\n//             <div className=\"response\">{entry.response}</div>\n//           </li>\n//         ))}\n//       </ul>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           value={prompt}\n//           onChange={(e) => setPrompt(e.target.value)}\n//           placeholder=\"Type your prompt\"\n//           required\n//         />\n//         <input\n//           type=\"file\"\n//           onChange={handleFileChange}\n//         />\n//         <button type=\"submit\">Send</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default ChatWindow;\nimport React, { useState, useEffect } from 'react';\nimport { fetchConversation, appendToConversation } from '../api/chatApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  chatId,\n  isSidebarVisible\n}) => {\n  _s();\n  const [chat, setChat] = useState(null);\n  const [prompt, setPrompt] = useState('');\n  const [file, setFile] = useState(null);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const loadChat = async () => {\n      if (chatId) {\n        const data = await fetchConversation(chatId);\n        setChat(data);\n      }\n    };\n    loadChat();\n  }, [chatId]);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('prompt', prompt);\n    if (file) {\n      formData.append('file', file);\n    }\n\n    // User message\n    const userMessage = {\n      type: 'user',\n      text: prompt\n    };\n\n    // Bot's dummy response\n    const botResponse = {\n      type: 'bot',\n      text: 'This is a dummy response' // Here you can replace this with actual bot response logic\n    };\n\n    // Add both the user and bot messages\n    setMessages(prevMessages => [...prevMessages, userMessage, botResponse]);\n\n    // Reset the input fields\n    setPrompt('');\n    setFile(null);\n\n    // Assuming you append the conversation to the backend here\n    const updatedChat = await appendToConversation(chatId, prompt, botResponse.text, formData);\n    setChat(updatedChat);\n  };\n  const firstPrompt = chat !== null && chat !== void 0 && chat.history && chat.history[0] ? chat.history[0].prompt : 'Untitled Chat';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col h-screen bg-gray-50 transition-all duration-300 ${isSidebarVisible ? 'ml-22' : 'ml-0'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"p-4 bg-gray-900 text-white shadow-md sticky top-0 z-10\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-semibold\",\n        children: firstPrompt || 'Chat'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto p-6 bg-gray-700\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-4 m-4 rounded-lg shadow-md border-spacing-1 ${message.type === 'bot' ? 'bg-blue-100 text-gray-900 self-center' // Bot message: center aligned\n        : 'bg-gray-200 text-gray-900 self-end' // User message: right aligned\n        }`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-medium\",\n          children: message.type === 'user' ? 'You' : 'Bot'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 text-sm\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"p-4 bg-gray-900\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          placeholder: \"Type your prompt\",\n          className: \"flex-grow px-4 py-3 rounded-full bg-gray-800 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-md\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          className: \"hidden\",\n          id: \"file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"flex items-center justify-center px-4 py-3 bg-gray-800 text-white rounded-full hover:bg-gray-700 cursor-pointer shadow-md\",\n          children: \"\\uD83D\\uDCCE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"px-4 py-3 bg-blue-600 text-white rounded-full hover:bg-blue-500 shadow-md\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"PYtxtNBvBgww+g9fVAFtI9ZINXM=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","fetchConversation","appendToConversation","jsxDEV","_jsxDEV","ChatWindow","chatId","isSidebarVisible","_s","chat","setChat","prompt","setPrompt","file","setFile","messages","setMessages","loadChat","data","handleFileChange","e","selectedFile","target","files","handleSubmit","preventDefault","formData","FormData","append","userMessage","type","text","botResponse","prevMessages","updatedChat","firstPrompt","history","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","onSubmit","value","onChange","placeholder","required","id","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/harsh/OneDrive/Desktop/INTEL/intel/frontend/src/components/ChatWindow.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { fetchConversation, appendToConversation } from '../api/chatApi';\r\n// import './ChatWindow.css';\r\n\r\n// const ChatWindow = ({ chatId }) => {\r\n//   const [chat, setChat] = useState(null);\r\n//   const [prompt, setPrompt] = useState('');\r\n//   const [file, setFile] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const loadChat = async () => {\r\n//       if (chatId) {\r\n//         const data = await fetchConversation(chatId);\r\n//         setChat(data);\r\n//       }\r\n//     };\r\n//     loadChat();\r\n//   }, [chatId]);\r\n\r\n//   const handleFileChange = (e) => {\r\n//     const selectedFile = e.target.files[0];\r\n//     setFile(selectedFile);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const formData = new FormData();\r\n//     formData.append('prompt', prompt);\r\n\r\n//     if (file) {\r\n//       formData.append('file', file);\r\n//     }\r\n\r\n\r\n//     const dummyResponse = 'This is a dummy response';\r\n\r\n//     const updatedChat = await appendToConversation(chatId, prompt, dummyResponse, formData);\r\n//     setPrompt('');\r\n//     setFile(null);\r\n\r\n\r\n//     setChat(updatedChat);\r\n//   };\r\n\r\n\r\n//   const firstPrompt = chat?.history && chat.history[0] ? chat.history[0].prompt : 'Untitled Chat';\r\n\r\n//   return (\r\n//     <div className=\"chat-window\">\r\n//       {chatId && <h3 className=\"chat-id\">Chat Title: {firstPrompt}</h3>}\r\n\r\n\r\n//       <ul>\r\n//         {chat?.history.map((entry, index) => (\r\n//           <li key={index}>\r\n//             <div className=\"prompt\">{entry.prompt}</div>\r\n//             <div className=\"response\">{entry.response}</div>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={prompt}\r\n//           onChange={(e) => setPrompt(e.target.value)}\r\n//           placeholder=\"Type your prompt\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"file\"\r\n//           onChange={handleFileChange}\r\n//         />\r\n//         <button type=\"submit\">Send</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ChatWindow;\r\nimport React, { useState, useEffect } from 'react';\r\nimport { fetchConversation, appendToConversation } from '../api/chatApi';\r\n\r\nconst ChatWindow = ({ chatId, isSidebarVisible }) => {\r\n  const [chat, setChat] = useState(null);\r\n  const [prompt, setPrompt] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadChat = async () => {\r\n      if (chatId) {\r\n        const data = await fetchConversation(chatId);\r\n        setChat(data);\r\n      }\r\n    };\r\n    loadChat();\r\n  }, [chatId]);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setFile(selectedFile);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('prompt', prompt);\r\n    if (file) {\r\n      formData.append('file', file);\r\n    }\r\n\r\n    // User message\r\n    const userMessage = {\r\n      type: 'user',\r\n      text: prompt,\r\n    };\r\n\r\n    // Bot's dummy response\r\n    const botResponse = {\r\n      type: 'bot',\r\n      text: 'This is a dummy response', // Here you can replace this with actual bot response logic\r\n    };\r\n\r\n    // Add both the user and bot messages\r\n    setMessages((prevMessages) => [...prevMessages, userMessage, botResponse]);\r\n\r\n    // Reset the input fields\r\n    setPrompt('');\r\n    setFile(null);\r\n\r\n    // Assuming you append the conversation to the backend here\r\n    const updatedChat = await appendToConversation(chatId, prompt, botResponse.text, formData);\r\n    setChat(updatedChat);\r\n  };\r\n\r\n  const firstPrompt = chat?.history && chat.history[0] ? chat.history[0].prompt : 'Untitled Chat';\r\n\r\n  return (\r\n    <div\r\n      className={`flex flex-col h-screen bg-gray-50 transition-all duration-300 ${\r\n        isSidebarVisible ? 'ml-22' : 'ml-0'\r\n      }`}\r\n    >\r\n      {/* Header */}\r\n      <header className=\"p-4 bg-gray-900 text-white shadow-md sticky top-0 z-10\">\r\n        <h1 className=\"text-xl font-semibold\">{firstPrompt || 'Chat'}</h1>\r\n      </header>\r\n\r\n      {/* Chat History */}\r\n      <div className=\"flex-grow overflow-y-auto p-6 bg-gray-700\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`p-4 m-4 rounded-lg shadow-md border-spacing-1 ${\r\n              message.type === 'bot'\r\n                ? 'bg-blue-100 text-gray-900 self-center' // Bot message: center aligned\r\n                : 'bg-gray-200 text-gray-900 self-end' // User message: right aligned\r\n            }`}\r\n          >\r\n            <div className=\"font-medium\">{message.type === 'user' ? 'You' : 'Bot'}</div>\r\n            <div className=\"mt-2 text-sm\">{message.text}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Footer */}\r\n      <footer className=\"p-4 bg-gray-900\">\r\n        <form onSubmit={handleSubmit} className=\"flex items-center space-x-2\">\r\n          {/* Prompt Input */}\r\n          <input\r\n            type=\"text\"\r\n            value={prompt}\r\n            onChange={(e) => setPrompt(e.target.value)}\r\n            placeholder=\"Type your prompt\"\r\n            className=\"flex-grow px-4 py-3 rounded-full bg-gray-800 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-md\"\r\n            required\r\n          />\r\n          {/* File Input */}\r\n          <input\r\n            type=\"file\"\r\n            onChange={handleFileChange}\r\n            className=\"hidden\"\r\n            id=\"file-upload\"\r\n          />\r\n          <label\r\n            htmlFor=\"file-upload\"\r\n            className=\"flex items-center justify-center px-4 py-3 bg-gray-800 text-white rounded-full hover:bg-gray-700 cursor-pointer shadow-md\"\r\n          >\r\n            📎\r\n          </label>\r\n          {/* Submit Button */}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"px-4 py-3 bg-blue-600 text-white rounded-full hover:bg-blue-500 shadow-md\"\r\n          >\r\n            Send\r\n          </button>\r\n        </form>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}