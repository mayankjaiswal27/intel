{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { fetchConversations, deleteConversation } from '../api/chatApi'; \n// import './Sidebar.css';\n\n// const Sidebar = ({ onSelectChat, onNewChat, toggleSidebar }) => {\n//   const [conversations, setConversations] = useState([]);\n\n//   const loadConversations = async () => {\n//     const data = await fetchConversations();\n//     setConversations(data);\n//   };\n\n//   useEffect(() => {\n//     loadConversations();\n\n//     const interval = setInterval(() => {\n//       loadConversations();\n//     }, 1000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const handleNewChat = async () => {\n//     await onNewChat();\n//     loadConversations();\n//   };\n\n//   const handleDeleteChat = async (chatId) => {\n//     await deleteConversation(chatId);\n//     loadConversations();\n//   };\n\n//   return (\n//     <div className=\"sidebar\">\n//       <button className=\"close-sidebar-btn\" onClick={toggleSidebar}>\n//         Hide Chat History\n//       </button>\n//       <button onClick={handleNewChat}>New Chat</button>\n//       <ul>\n//         {conversations.map((chat) => {\n\n//           const firstPrompt = chat.history && chat.history[0] ? chat.history[0].prompt : 'Untitled Chat';\n\n//           return (\n//             <li key={chat._id} onClick={() => onSelectChat(chat._id)}>\n//               <span>{firstPrompt}</span>\n//               <button onClick={(e) => {\n//                 e.stopPropagation();\n//                 handleDeleteChat(chat._id);\n//               }}>\n//                 Delete\n//               </button>\n//             </li>\n//           );\n//         })}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default Sidebar;","map":{"version":3,"names":[],"sources":["C:/Users/harsh/OneDrive/Desktop/INTEL/intel/frontend/src/components/Sidebar.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { fetchConversations, deleteConversation } from '../api/chatApi'; \r\n// import './Sidebar.css';\r\n\r\n// const Sidebar = ({ onSelectChat, onNewChat, toggleSidebar }) => {\r\n//   const [conversations, setConversations] = useState([]);\r\n\r\n//   const loadConversations = async () => {\r\n//     const data = await fetchConversations();\r\n//     setConversations(data);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     loadConversations();\r\n\r\n//     const interval = setInterval(() => {\r\n//       loadConversations();\r\n//     }, 1000);\r\n\r\n\r\n//     return () => clearInterval(interval);\r\n//   }, []);\r\n\r\n//   const handleNewChat = async () => {\r\n//     await onNewChat();\r\n//     loadConversations();\r\n//   };\r\n\r\n\r\n//   const handleDeleteChat = async (chatId) => {\r\n//     await deleteConversation(chatId);\r\n//     loadConversations();\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"sidebar\">\r\n//       <button className=\"close-sidebar-btn\" onClick={toggleSidebar}>\r\n//         Hide Chat History\r\n//       </button>\r\n//       <button onClick={handleNewChat}>New Chat</button>\r\n//       <ul>\r\n//         {conversations.map((chat) => {\r\n\r\n//           const firstPrompt = chat.history && chat.history[0] ? chat.history[0].prompt : 'Untitled Chat';\r\n\r\n//           return (\r\n//             <li key={chat._id} onClick={() => onSelectChat(chat._id)}>\r\n//               <span>{firstPrompt}</span>\r\n//               <button onClick={(e) => {\r\n//                 e.stopPropagation();\r\n//                 handleDeleteChat(chat._id);\r\n//               }}>\r\n//                 Delete\r\n//               </button>\r\n//             </li>\r\n//           );\r\n//         })}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Sidebar;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}