{"ast":null,"code":"const BASE_URL = 'http://localhost:5000/api/conversations';\nexport const fetchConversations = async () => {\n  const response = await fetch(BASE_URL);\n  return response.json();\n};\nexport const fetchConversation = async id => {\n  const response = await fetch(`${BASE_URL}/${id}`);\n  return response.json();\n};\nexport const createConversation = async chatName => {\n  const response = await fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      chat_name: chatName,\n      history: []\n    })\n  });\n  return response.json();\n};\nexport const appendToConversation = async (id, prompt, response) => {\n  const responseApi = await fetch(`${BASE_URL}/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      prompt,\n      response\n    })\n  });\n  return responseApi.json();\n};\nexport const deleteConversation = async chatId => {\n  const response = await fetch(`http://localhost:5000/api/conversations/${chatId}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Failed to delete conversation');\n  }\n  return response.json();\n};","map":{"version":3,"names":["BASE_URL","fetchConversations","response","fetch","json","fetchConversation","id","createConversation","chatName","method","headers","body","JSON","stringify","chat_name","history","appendToConversation","prompt","responseApi","deleteConversation","chatId","ok","Error"],"sources":["C:/Users/harsh/OneDrive/Desktop/INTEL/intel/frontend/src/api/chatApi.js"],"sourcesContent":["const BASE_URL = 'http://localhost:5000/api/conversations';\r\n\r\nexport const fetchConversations = async () => {\r\n  const response = await fetch(BASE_URL);\r\n  return response.json();\r\n};\r\n\r\nexport const fetchConversation = async (id) => {\r\n  const response = await fetch(`${BASE_URL}/${id}`);\r\n  return response.json();\r\n};\r\n\r\nexport const createConversation = async (chatName) => {\r\n  const response = await fetch(BASE_URL, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ chat_name: chatName, history: [] }),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const appendToConversation = async (id, prompt, response) => {\r\n  const responseApi = await fetch(`${BASE_URL}/${id}`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ prompt, response }),\r\n  });\r\n  return responseApi.json();\r\n};\r\nexport const deleteConversation = async (chatId) => {\r\n  const response = await fetch(`http://localhost:5000/api/conversations/${chatId}`, {\r\n    method: 'DELETE',\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Failed to delete conversation');\r\n  }\r\n\r\n  return response.json();\r\n};\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,yCAAyC;AAE1D,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,CAAC;EACtC,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,EAAE,IAAK;EAC7C,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,IAAIM,EAAE,EAAE,CAAC;EACjD,OAAOJ,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMG,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;EACpD,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,EAAE;IACrCS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,SAAS,EAAEN,QAAQ;MAAEO,OAAO,EAAE;IAAG,CAAC;EAC3D,CAAC,CAAC;EACF,OAAOb,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMY,oBAAoB,GAAG,MAAAA,CAAOV,EAAE,EAAEW,MAAM,EAAEf,QAAQ,KAAK;EAClE,MAAMgB,WAAW,GAAG,MAAMf,KAAK,CAAC,GAAGH,QAAQ,IAAIM,EAAE,EAAE,EAAE;IACnDG,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEI,MAAM;MAAEf;IAAS,CAAC;EAC3C,CAAC,CAAC;EACF,OAAOgB,WAAW,CAACd,IAAI,CAAC,CAAC;AAC3B,CAAC;AACD,OAAO,MAAMe,kBAAkB,GAAG,MAAOC,MAAM,IAAK;EAClD,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2CiB,MAAM,EAAE,EAAE;IAChFX,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,IAAI,CAACP,QAAQ,CAACmB,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAClD;EAEA,OAAOpB,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}